{"name":"Graded 802.11n","tagline":"Packet Delivery Modeling in Mobile 802.11n Networks","body":"## 1. Brief Description\r\n\r\n### a. Platform\r\n\r\nThe AP module used in our experiments is TP-LINK’s TL-WRD4310 2.4/5GHz dual band gigabit router,\r\nwhich uses Atheros AR9580 radio chipset. It supports up to 3x3 MIMO and 300Mbps/450Mbps date rates\r\nfor channel type of HT20/HT40. We conduct experiments with laptops in mobile, and the clients are using\r\nAtheros’s 802.11n wireless card AR9380 with 2.4/5GHz dual band and 3 spatial streams. All the clients\r\nare running Linux kernel of 3.2.0-26 with modified ath9k wireless driver.\r\n\r\n### b. Algorithm\r\n\r\nThe following figure illustrates the software architecture of Graded 802.11n, which is composed of both network layer and device layer components.\r\n\r\n![Framework of graded 802.11n](http://yongsen.github.io/img/framework.jpg)\r\n\r\n1. The network layer conducts DSWA calculations to determine averaging intervals and sliding factor, and makes GradedT update to get rate selection indexes. \r\n\r\n2. On the device layer, it is driven by transmitting and receiving events that execute PDR computation and RSS averaging respectively. The rate indexes are also selected on device layer according to results of network layer when the PDR or RSS is lower than transmission threshold.\r\n\r\n### c. Measurement\r\n\r\nThe measuremment experiments were conducted under 5.745GHz frequency band on channel 149, which encounters with less legacy interference. In both static and mobile experiments, UDP packets of 1500 bytes size are transmitted through `iperf`. To get accurate PDR measurement, some MAC layer mechanisms such as RTS/CTS and ACK are disabled, and also the spatial multiplexing power save mode. The packet delivery measurement of mobile 802.11n networks is carried out along different routes. The above experiments cover most of the key features of packet delivery in mobile 802.11n networks.\r\n\r\n![Measurement results of graded 802.11n](http://yongsen.github.io/img/goodput3.jpg)\r\n\r\n## 2. Files\r\n\r\n1. **data**: measured data including packet loss rate, packet failed rate, received signal strength, etc.\r\n2. **DSWA**: dynamic sliding window averaging\r\n3. **gnuplot**: demos of gnuplot of experimental results\r\n4. **pktinfo**: packet delivery measurement source files based on _ath9k_\r\n\r\n## 3. How to\r\n\r\n### a. For **DSWA**\r\n1. `cd DSWA`\r\n2. `sudo make`\r\n3. `sudo DSWA`\r\n\r\n### b. For **pktinfo**\r\n1. make sure the device information in _common.h_ is exactly what you are going to track\r\n2. `cd pktinfo`\r\n3. `sudo make`\r\n4. `sudo ./pktinfo`\r\n\r\n### c. For **gnuplot**\r\n\r\n1. make sure the experimental results and _time.plt_ are in the same folder\r\n2. `gnuplot`\r\n3. `load time.plt`","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}